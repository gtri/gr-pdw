id: pdw_pulse_detect
label: pulse_detect
category: '[pdw]'

templates:
  imports: import pdw
  make: pdw.pulse_detect(${threshold}, ${fs})
  callbacks:
    - threshold_changed(${threshold})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
#- id: technique
#  label: Technique
#  dtype: string
#  default: Derivative
#  options: ['Time', 'Derivative']
#  option_labels: ['Time', 'Derivative']
#- id: noise_technique
#  label: Noise Technique
#  dtype: string
#  default: Manual
#  options: ['Manual', 'Auto']
#  option_labels: ['Manual', 'Auto (Not Implemented)']
- id: threshold
  label: Threshold (0-1)
  dtype: float
  default: 0.2
- id: fs
  label: Sample Rate
  dtype: float
  default: samp_rate
#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in0
  domain: stream
  dtype: complex
  vlen: 1
  optional: 0
  
#- label: settings
#  domain: message
#  dtype: message
#  optional: 1

outputs:
- label: out0
  domain: stream
  dtype: complex
  vlen: 1
  optional: 0
  
- label: dt
  domain: stream
  dtype: float
  vlen: 1
  optional: 1

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
